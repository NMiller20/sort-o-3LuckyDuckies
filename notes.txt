TNPG: 3 Lucky Duckies, Gloria Lee, Nora Miller, Ziying Jian
APCS
L04 -- Never Fear, Big O is Here!
2022-01-10
time spent: 3 hrs

DISCO
- Bubble and Insertion sort's best case scenario is when the list is already in order
- Selection has no best/worst case scenario
- Selection sort is most efficient for lists that are ordered backwards

QCC
- What exactly is big-O classification and how can it be used here?
- How do we assess best and worst case scenario using the counters. 
- Why do we need all three counters: compare, swap, and pass?

BUB-QA (Q’s and their A’s from header comment)
- 

SEL-QA (Q’s and their A’s from header comment)
-

INS-QA (Q’s and their A’s from header comment)
- 

To do:
Refactor to use helper functions (run to ensure functionality)

- Figure out best and worst cases for each
- Confirm it empirically
- Once confident in the above, refactor the SOPs to display info about the
- Test multiple sizes

Implementation considerations:
- How to assess worst case/best case empirically (if we need to)
- We decided to make the counters values that are returned as an array for every function that modifies data, rather than as
  variables of each instance of Sorts, because if we did them as variables of Sorts, each instance of Sorts would only be able to
  run each function once

